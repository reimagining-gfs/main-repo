syntax = "proto3";
package gfs.client_master;

option go_package = "github.com/Mit-Vin/GFS-Distributed-Systems/api/proto/client_master";

import "api/proto/common/common.proto";

service ClientMasterService {
    rpc GetFileChunksInfo(GetFileChunksInfoRequest) returns (GetFileChunksInfoResponse) {}
    // Get the last file chunk related to a file
    rpc GetLastChunkIndexInFile(GetLastChunkIndexInFileRequest) returns (GetLastChunkIndexInFileResponse) {}
    rpc CreateFile(CreateFileRequest) returns (CreateFileResponse) {}
    rpc DeleteFile(DeleteFileRequest) returns (DeleteFileResponse) {}
    rpc RenameFile(RenameFileRequest) returns (RenameFileResponse) {}
}

message ChunkInfo {
    common.ChunkHandle chunk_handle = 1;
    common.ChunkLocation primary_location = 2;
    repeated common.ChunkLocation secondary_locations = 3;
    int32 version = 4;
}

message GetFileChunksInfoRequest {
    string filename = 1;
    /*
        Start and end chunk indices (inclusive)
        This will save communication overhead b/w client and master
    */
    int64 start_chunk = 2;
    int64 end_chunk = 3;
}

message GetFileChunksInfoResponse {
    common.Status status = 1;
    map<int64, ChunkInfo> chunks = 2;
}

message GetLastChunkIndexInFileRequest {
    string filename = 1;
}

message GetLastChunkIndexInFileResponse {
    common.Status status = 1;
    int64 last_chunk_index = 2;
}

message CreateFileRequest {
    string filename = 1;
}

message CreateFileResponse {
    common.Status status = 1;
}

message DeleteFileRequest {
    string filename = 1;
}

message DeleteFileResponse {
    common.Status status = 1;
}

message RenameFileRequest {
    string old_filename = 1;
    string new_filename = 2;
}

message RenameFileResponse {
    common.Status status = 1;
}